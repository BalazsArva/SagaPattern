// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SagaDemo.LoyaltyPointsAPI.DataAccess;

namespace SagaDemo.LoyaltyPointsAPI.DataAccess.Migrations
{
    [DbContext(typeof(LoyaltyDbContext))]
    partial class LoyaltyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SagaDemo.LoyaltyPointsAPI.DataAccess.Entities.PointsConsumedEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PointChange");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("UserId");

                    b.Property<DateTime>("UtcDateTimeRecorded");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("PointsConsumedEvents");
                });

            modelBuilder.Entity("SagaDemo.LoyaltyPointsAPI.DataAccess.Entities.PointsEarnedEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PointChange");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("UserId");

                    b.Property<DateTime>("UtcDateTimeRecorded");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("PointsEarnedEvents");
                });

            modelBuilder.Entity("SagaDemo.LoyaltyPointsAPI.DataAccess.Entities.PointsRefundedEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PointChange");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<int>("UserId");

                    b.Property<DateTime>("UtcDateTimeRecorded");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("PointsRefundedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
